name: Salesforce Deploy Actions

run-name: ${{ github.actor }} is testing out GitHub Actions

on:
  workflow_call:
    inputs:
      DEPLOY_TYPE:
        required: true
        type: string
    secrets:
      SALESFORCE_DEVHUB_USERNAME:
        required: true
      SALESFORCE_CONSUMER_KEY:
        required: true
      SALESFORCE_JWT_SECRET_KEY:
        required: true      

jobs:
  deploy-to-salesforce-org:
    runs-on: ubuntu-latest   
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."      
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." 
      - name: Install nodejs 
        uses: actions/setup-node@v2
        with:
          node-version: '14'          
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Read PR Body'
        env:
          PR_BODY: ${{github.event.pull_request.body}}
        run: |
            echo $PR_BODY > ./pr_body.txt
            node ./parsePR.js              
            TESTS=$(cat testsToRun.txt)       
            echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV
      # Now Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
            mkdir ~/sfdx
            tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
            echo "$HOME/sfdx/bin" >> $GITHUB_PATH
            ~/sfdx/bin/sfdx version
      - name: 'Installing sfdx git delta'
        run: | 
            echo y | sfdx plugins:install sfdx-git-delta
            sfdx plugins
      # Install java as it is required for the next step
      - name: 'Installing java'
        run: sudo apt-get install openjdk-8-jdk
      
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: | 
            sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output . -i .sfdxdetlaignore
            echo "-----package.xml generated-----"
            cat package/package.xml
      
      - name: 'Populate key'
        shell: bash
        run: |
            echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
      
      - name: 'Authorize Salesforce Org'
        run: sfdx force:auth:jwt:grant --clientid=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwtkeyfile=server.key --username=${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --setdefaultdevhubusername     
      
      - name: 'Check-only deploy delta changes - run specified tests'
        if: ${{ inputs.DEPLOY_TYPE == 'CHECK-ONLY' && env.APEX_TESTS != 'all' }}
        run: |
            echo ${{env.APEX_TESTS}}
            sfdx force:source:deploy -x package/package.xml --checkonly --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}} -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --json

      # If the env variable equals all, we run all tests
      - name: 'Check-only deploy delta changes - run all tests'
        if: ${{ inputs.DEPLOY_TYPE == 'CHECK-ONLY' && env.APEX_TESTS == 'all' }}
        run: |
            sfdx force:source:deploy -x package/package.xml --checkonly --testlevel RunLocalTests -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --json
      
      - name: 'Deploy delta changes - run all tests'
        if: ${{ inputs.DEPLOY_TYPE == 'DEPLOY-ONLY' && env.APEX_TESTS == 'all' }}
        run: |
            sfdx force:source:deploy -x package/package.xml --testlevel RunLocalTests -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --json
      
      - run: echo "üçè This job's status is ${{ job.status }}."