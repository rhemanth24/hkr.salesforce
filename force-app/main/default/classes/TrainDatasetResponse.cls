/*public class TrainDatasetResponse {
    public Integer datasetId {get;set;} 
    public Integer datasetVersionId {get;set;} 
    public String name {get;set;} 
    public String status {get;set;} 
    public Decimal progress {get;set;} 
    public String createdAt {get;set;} 
    public String updatedAt {get;set;} 
    public Double learningRate {get;set;} 
    public Integer epochs {get;set;} 
    public Integer queuePosition {get;set;} 
    public String modelId {get;set;} 
    public String trainParams {get;set;} 
    public String trainStats {get;set;} 
    public String modelType {get;set;} 
    
    public TrainDatasetResponse() {
        
    }
}*/
//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class TrainDatasetResponse {

	public Integer datasetId {get;set;} 
	public Integer datasetVersionId {get;set;} 
	public String name {get;set;} 
	public String status {get;set;} 
	public Double progress {get;set;} 
	public String createdAt {get;set;} 
	public String updatedAt {get;set;} 
	public String modelId {get;set;} 
	public Integer queuePosition {get;set;} 
	public String modelType {get;set;} 
	public String algorithm {get;set;} 
	public String language {get;set;} 
	public String object_Z {get;set;} // in json: object
	public TrainParams trainParams {get;set;} 
	public Object trainStats {get;set;} 

	public TrainDatasetResponse(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'datasetId') {
						datasetId = parser.getIntegerValue();
					} else if (text == 'datasetVersionId') {
						datasetVersionId = parser.getIntegerValue();
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'status') {
						status = parser.getText();
					} else if (text == 'progress') {
						progress = parser.getDoubleValue();
					} else if (text == 'createdAt') {
						createdAt = parser.getText();
					} else if (text == 'updatedAt') {
						updatedAt = parser.getText();
					} else if (text == 'modelId') {
						modelId = parser.getText();
					} else if (text == 'queuePosition') {
						queuePosition = parser.getIntegerValue();
					} else if (text == 'modelType') {
						modelType = parser.getText();
					} else if (text == 'algorithm') {
						algorithm = parser.getText();
					} else if (text == 'language') {
						language = parser.getText();
					} else if (text == 'object') {
						object_Z = parser.getText();
					} else if (text == 'trainParams') {
						trainParams = new TrainParams(parser);
					} else if (text == 'trainStats') {
						trainStats = parser.readValueAs(Object.class);
					} else {
						System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class TrainParams {

		public TrainParams(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'TrainParams consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static TrainDatasetResponse parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new TrainDatasetResponse(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
    public TrainDatasetResponse() {
        
    }
}